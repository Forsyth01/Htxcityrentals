import React, { useState } from "react";
import { useCart } from "../context/CartContext";
import { Plus, Minus, ShoppingCart } from "lucide-react";
import { motion } from "framer-motion";

export default function ProductCard({ product }) {
  const { addToCart } = useCart();
  const [quantity, setQuantity] = useState(1);
  const [days, setDays] = useState(1);

  const handleAddToCart = () => {
    addToCart(product, quantity, days);
    setQuantity(1);
    setDays(1);
  };

  return (
    <motion.div
      className="max-w-sm mx-auto w-full h-full"
      initial={{ opacity: 0, y: 30 }}
      whileInView={{ opacity: 1, y: 0 }}
      viewport={{ once: true, amount: 0.1 }}
      transition={{ duration: 0.6, ease: "easeOut" }}
    >
      <motion.div
        className="group rounded-2xl shadow-md p-4 flex flex-col gap-4 bg-white h-full"
        whileHover={{ y: -4, scale: 1.02, boxShadow: "0 12px 25px rgba(0,0,0,0.12)" }}
        transition={{ type: "spring", stiffness: 300 }}
      >
        {/* Product Image */}
        <div className="w-full h-48 sm:h-52 md:h-56 lg:h-60 overflow-hidden rounded-xl">
          <img
            src={product.image}
            alt={product.name}
            className="w-full h-full object-cover"
          />
        </div>

        {/* Product Info */}
        <div className="flex flex-col justify-between flex-1 gap-2">
          <div>
            <h3 className="text-lg font-semibold text-gray-800">{product.name}</h3>
            <p className="text-gray-500 text-sm mt-1 line-clamp-2">{product.description}</p>
            <p className="text-orange-600 font-bold text-md mt-2">${product.price}/day</p>
          </div>

          {/* Quantity & Days */}
          <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-3 mt-3">
            {/* Quantity */}
            <div className="flex items-center gap-2">
              <span className="text-sm font-medium text-gray-700">Qty:</span>
              <div className="flex items-center bg-gray-200 rounded-lg overflow-hidden">
                <button
                  onClick={() => setQuantity(q => Math.max(1, q - 1))}
                  className="px-2 py-1 bg-gray-100 hover:bg-gray-300 transition-colors"
                >
                  <Minus size={14} />
                </button>
                <input
                  type="number"
                  min="1"
                  value={quantity}
                  onChange={e => setQuantity(Math.max(1, parseInt(e.target.value) || 1))}
                  className="w-12 text-center outline-none text-sm"
                />
                <button
                  onClick={() => setQuantity(q => q + 1)}
                  className="px-2 py-1 bg-gray-100 hover:bg-gray-300 transition-colors"
                >
                  <Plus size={14} />
                </button>
              </div>
            </div>

            {/* Days */}
            <div className="flex items-center gap-2">
              <span className="text-sm font-medium text-gray-700">Days:</span>
              <div className="flex items-center bg-gray-200 rounded-lg overflow-hidden">
                <button
                  onClick={() => setDays(d => Math.max(1, d - 1))}
                  className="px-2 py-1 bg-gray-100 hover:bg-gray-300 transition-colors"
                >
                  <Minus size={14} />
                </button>
                <input
                  type="number"
                  min="1"
                  value={days}
                  onChange={e => setDays(Math.max(1, parseInt(e.target.value) || 1))}
                  className="w-12 text-center outline-none text-sm"
                />
                <button
                  onClick={() => setDays(d => d + 1)}
                  className="px-2 py-1 bg-gray-100 hover:bg-gray-300 transition-colors"
                >
                  <Plus size={14} />
                </button>
              </div>
            </div>
          </div>

          {/* Add to Quote Button */}
          <button
            onClick={handleAddToCart}
            className="mt-4 w-full bg-gradient-to-r from-orange-500 to-orange-600 text-white py-2 rounded-lg hover:from-orange-600 hover:to-orange-700 transition-colors flex items-center justify-center gap-2 text-sm font-medium"
          >
            <ShoppingCart size={16} /> Add to Quote
          </button>
        </div>
      </motion.div>
    </motion.div>
  );
}
